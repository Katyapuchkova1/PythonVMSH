import matplotlib.pyplot as plt 
import random
class LagrangePolynom:
    
    def __init__(self, x_list, y_list):
        self.x_list = x_list
        self.y_list = y_list
        self.n = len(self.x_list)
        self.denominators = []
        for i in range(self.n):
            denom = 1
            for j in range(self.n):
                if i != j:
                    denom *= (self.x_list[i] - self.x_list[j])
            self.denominators.append(denom)
    def __call__(self, x):
        P = 0
        for j in range(self.n):
            full_numerator = 1
            for i in range(self.n):
                full_numerator *= (x - self.x_list[i])
            P += self.y_list[j]*full_numerator/((x - x[j])*self.denominators[j])
        return P
    
a, b = -2, 2
N = 24
x_list = [a + i*(b - a)/2 for i in range(N)]
y_list = [random.random() for i in range(N)]
plt.plot(x_list, y_list, "*")
P = LagrangPolynom(x_list, y_list)
a, b = -2, 2
N = 500
x = [random.random() for i in range(N)]
y = list(map(P, x))
plt.plot(x, y)
