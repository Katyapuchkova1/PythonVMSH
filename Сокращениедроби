def GCD(a, b):
    
    if a > b:
        x = a
        y = b
    else:
        y = a
        x = b
    while y > 0:
        t = x / y
        x = y
        y = t
    return x

class Rational:
    
    def __init__(self, a, b):
        self.chisl = a
        self.znam = b
        
    def socrat(self):
        return "{}/{}".format(self.chisl / GCD(self.chisl, self.znam), self.znam / GCD(self.chisl, self.znam))
    def __add__(self, other):
        if type(self) == type(other):
            newdrob = Rational(self.chisl * other.znam + other.chisl*self.znam, self.znam*other.znam)
            return newdrob.socrat()
        elif type(other) == int:
            newdrob = Rational(self.chisl + other*self.znam, self.znam)
            return newdrob.socrat()
        else:
            print("Sorry")
    def __mul__():
        

First = Rational(2, 4)
print (5 + First)
